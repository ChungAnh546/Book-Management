/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.quanlynhanvien.ui;

import com.mycompany.quanlynhanvien.Dao.NhaCungCapDao;
import com.mycompany.quanlynhanvien.Dao.NhomSanPhamDao;
import com.mycompany.quanlynhanvien.Dao.TacGiaDao;
import com.mycompany.quanlynhanvien.Helpers.ConnectDB;
import com.mycompany.quanlynhanvien.Helpers.DataValidator;
import com.mycompany.quanlynhanvien.Helpers.MessageDialogHelper;
import com.mycompany.quanlynhanvien.model.NhaCungCap;
import com.mycompany.quanlynhanvien.model.NhomSanPham;
import com.mycompany.quanlynhanvien.model.TacGia;
import com.toedter.calendar.JDateChooser;
import java.awt.Color;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class QLNSPForm extends javax.swing.JPanel {
    private DefaultTableModel tblModel;
    /**
     * Creates new form QLNSPForm
     */
    public QLNSPForm() {
        initComponents();
        initTable();
        loadDataToTable();
    }
    private void initTable()
    {
        tblModel = new DefaultTableModel(){public boolean isCellEditable(int row, int column) {
       //Only the third column
       return column == -1;
   }};
        tblModel.setColumnIdentifiers(new String [] {"Mã Nhóm Sản Phẩm","Tên Nhóm Sản phẩm","Ngày Nhập"});
        tbl_DanhSachNSP_NSP.setModel(tblModel);
        
    }
    private void loadDataToTable()
    {
        try {
            NhomSanPhamDao dao = new NhomSanPhamDao();
            List<NhomSanPham> list = dao.findAll();
            tblModel.setRowCount(0);
            for(NhomSanPham it : list)
            {
                
               
                tblModel.addRow(new Object[]
                { it.getMaNhomSP(),it.getTenNhomSP(),it.getNgayNhap()} );
                
                tblModel.fireTableDataChanged();
            }
        } catch (Exception e) {
            e.printStackTrace();
            MessageDialogHelper.showErrorDialog(null, e.getMessage(), "Lỗi");
                 
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pn_TenForm_NSP = new javax.swing.JPanel();
        lbl_TenForm_NSP = new javax.swing.JLabel();
        pn_TTSP_NSP = new javax.swing.JPanel();
        lbl_MaNSP_NSP = new javax.swing.JLabel();
        lbl_TenNSP_NSP = new javax.swing.JLabel();
        txt_MaNSP_NSP = new javax.swing.JTextField();
        txt_TenNSP_NSP = new javax.swing.JTextField();
        lbl_NgayNhap_NSP = new javax.swing.JLabel();
        dc_NgayNhap_NSP = new com.toedter.calendar.JDateChooser();
        scp_DanhSachNSP_NSP = new javax.swing.JScrollPane();
        tbl_DanhSachNSP_NSP = new javax.swing.JTable();
        pn_ChucNang_NSP = new javax.swing.JPanel();
        btn_ThemNSP_NSP = new javax.swing.JButton();
        btn_Xoa_NSP = new javax.swing.JButton();
        btn_CapNhap_NSP = new javax.swing.JButton();
        btn_CapNhapBang_NSP = new javax.swing.JButton();
        btn_XoaTT_NSP = new javax.swing.JButton();
        pn_TimKiem_NSP = new javax.swing.JPanel();
        lbl_NhapTenMa_NSP = new javax.swing.JLabel();
        txt_MaTen_TK_NSP = new javax.swing.JTextField();
        lbl_NhomSP_TK_NSP = new javax.swing.JLabel();
        btn_TimKiem_TK_NSP = new javax.swing.JButton();
        dc_NgayNhap_TK_NSP = new com.toedter.calendar.JDateChooser();

        setPreferredSize(new java.awt.Dimension(1341, 745));

        lbl_TenForm_NSP.setBackground(new java.awt.Color(255, 255, 255));
        lbl_TenForm_NSP.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbl_TenForm_NSP.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_TenForm_NSP.setText("Nhóm Sản Phẩm");
        lbl_TenForm_NSP.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout pn_TenForm_NSPLayout = new javax.swing.GroupLayout(pn_TenForm_NSP);
        pn_TenForm_NSP.setLayout(pn_TenForm_NSPLayout);
        pn_TenForm_NSPLayout.setHorizontalGroup(
            pn_TenForm_NSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbl_TenForm_NSP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pn_TenForm_NSPLayout.setVerticalGroup(
            pn_TenForm_NSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbl_TenForm_NSP, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
        );

        pn_TTSP_NSP.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin nhóm sản phẩm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        lbl_MaNSP_NSP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbl_MaNSP_NSP.setText("Mã nhóm sản phẩm:");

        lbl_TenNSP_NSP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbl_TenNSP_NSP.setText("Tên nhóm sản phẩm:");

        txt_MaNSP_NSP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_MaNSP_NSP.setMinimumSize(new java.awt.Dimension(7, 25));

        txt_TenNSP_NSP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        lbl_NgayNhap_NSP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbl_NgayNhap_NSP.setText("Ngày nhập:");

        dc_NgayNhap_NSP.setDateFormatString("MM-dd-yyyy");
        dc_NgayNhap_NSP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout pn_TTSP_NSPLayout = new javax.swing.GroupLayout(pn_TTSP_NSP);
        pn_TTSP_NSP.setLayout(pn_TTSP_NSPLayout);
        pn_TTSP_NSPLayout.setHorizontalGroup(
            pn_TTSP_NSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_TTSP_NSPLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(pn_TTSP_NSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_MaNSP_NSP)
                    .addComponent(lbl_TenNSP_NSP))
                .addGap(57, 57, 57)
                .addGroup(pn_TTSP_NSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pn_TTSP_NSPLayout.createSequentialGroup()
                        .addComponent(txt_TenNSP_NSP, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(250, 250, 250))
                    .addGroup(pn_TTSP_NSPLayout.createSequentialGroup()
                        .addComponent(txt_MaNSP_NSP, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbl_NgayNhap_NSP)
                        .addGap(77, 77, 77)))
                .addComponent(dc_NgayNhap_NSP, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pn_TTSP_NSPLayout.setVerticalGroup(
            pn_TTSP_NSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_TTSP_NSPLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(pn_TTSP_NSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pn_TTSP_NSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbl_MaNSP_NSP)
                        .addComponent(txt_MaNSP_NSP, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbl_NgayNhap_NSP))
                    .addComponent(dc_NgayNhap_NSP, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(pn_TTSP_NSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_TenNSP_NSP, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_TenNSP_NSP))
                .addGap(192, 192, 192))
        );

        tbl_DanhSachNSP_NSP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tbl_DanhSachNSP_NSP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã NV", "Tên Nhân Viên", "Giới tính", "Ngày sinh", "Số điện thoại", "Chức vụ", "Tình trạng"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbl_DanhSachNSP_NSP.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tbl_DanhSachNSP_NSP.setName("Danh sách nhân viên\n"); // NOI18N
        tbl_DanhSachNSP_NSP.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tbl_DanhSachNSP_NSPFocusLost(evt);
            }
        });
        tbl_DanhSachNSP_NSP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_DanhSachNSP_NSPMouseClicked(evt);
            }
        });
        scp_DanhSachNSP_NSP.setViewportView(tbl_DanhSachNSP_NSP);

        btn_ThemNSP_NSP.setBackground(new java.awt.Color(51, 255, 51));
        btn_ThemNSP_NSP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_ThemNSP_NSP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/quanlynhanvien/icons/icons8-product-24.png"))); // NOI18N
        btn_ThemNSP_NSP.setText("Thêm nhóm");
        btn_ThemNSP_NSP.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btn_ThemNSP_NSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ThemNSP_NSPActionPerformed(evt);
            }
        });

        btn_Xoa_NSP.setBackground(new java.awt.Color(51, 255, 51));
        btn_Xoa_NSP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_Xoa_NSP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/quanlynhanvien/icons/icons8-delete-24.png"))); // NOI18N
        btn_Xoa_NSP.setText("    Xóa nhóm");
        btn_Xoa_NSP.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btn_Xoa_NSP.setMinimumSize(new java.awt.Dimension(93, 25));
        btn_Xoa_NSP.setPreferredSize(new java.awt.Dimension(93, 25));
        btn_Xoa_NSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Xoa_NSPActionPerformed(evt);
            }
        });

        btn_CapNhap_NSP.setBackground(new java.awt.Color(102, 255, 102));
        btn_CapNhap_NSP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_CapNhap_NSP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/quanlynhanvien/icons/icons8-pencil-24.png"))); // NOI18N
        btn_CapNhap_NSP.setText("Cập nhập nhóm");
        btn_CapNhap_NSP.setFocusable(false);
        btn_CapNhap_NSP.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btn_CapNhap_NSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CapNhap_NSPActionPerformed(evt);
            }
        });

        btn_CapNhapBang_NSP.setBackground(new java.awt.Color(51, 255, 51));
        btn_CapNhapBang_NSP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_CapNhapBang_NSP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/quanlynhanvien/icons/icons8-easel-24.png"))); // NOI18N
        btn_CapNhapBang_NSP.setText("Cập nhập lại bảng");
        btn_CapNhapBang_NSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CapNhapBang_NSPActionPerformed(evt);
            }
        });

        btn_XoaTT_NSP.setBackground(new java.awt.Color(51, 255, 51));
        btn_XoaTT_NSP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_XoaTT_NSP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/quanlynhanvien/icons/icons8-erase-24.png"))); // NOI18N
        btn_XoaTT_NSP.setText("Xóa thông tin");
        btn_XoaTT_NSP.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btn_XoaTT_NSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_XoaTT_NSPActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pn_ChucNang_NSPLayout = new javax.swing.GroupLayout(pn_ChucNang_NSP);
        pn_ChucNang_NSP.setLayout(pn_ChucNang_NSPLayout);
        pn_ChucNang_NSPLayout.setHorizontalGroup(
            pn_ChucNang_NSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_ChucNang_NSPLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(btn_XoaTT_NSP)
                .addGap(95, 95, 95)
                .addComponent(btn_ThemNSP_NSP)
                .addGap(92, 92, 92)
                .addComponent(btn_Xoa_NSP, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(84, 84, 84)
                .addComponent(btn_CapNhap_NSP)
                .addGap(68, 68, 68)
                .addComponent(btn_CapNhapBang_NSP)
                .addContainerGap(89, Short.MAX_VALUE))
        );
        pn_ChucNang_NSPLayout.setVerticalGroup(
            pn_ChucNang_NSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_ChucNang_NSPLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(pn_ChucNang_NSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_CapNhap_NSP, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_CapNhapBang_NSP, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_ThemNSP_NSP, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Xoa_NSP, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_XoaTT_NSP, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8))
        );

        pn_TimKiem_NSP.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tìm kiếm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        lbl_NhapTenMa_NSP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbl_NhapTenMa_NSP.setText("Mã hoặc tên nhóm sản phẩm:");

        txt_MaTen_TK_NSP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        lbl_NhomSP_TK_NSP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbl_NhomSP_TK_NSP.setText("Ngày nhập:");

        btn_TimKiem_TK_NSP.setBackground(new java.awt.Color(51, 255, 51));
        btn_TimKiem_TK_NSP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_TimKiem_TK_NSP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/mycompany/quanlynhanvien/icons/icons8-search-24.png"))); // NOI18N
        btn_TimKiem_TK_NSP.setText("Tìm kiếm");
        btn_TimKiem_TK_NSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_TimKiem_TK_NSPActionPerformed(evt);
            }
        });

        dc_NgayNhap_TK_NSP.setDateFormatString("MM-dd-yyyy");
        dc_NgayNhap_TK_NSP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout pn_TimKiem_NSPLayout = new javax.swing.GroupLayout(pn_TimKiem_NSP);
        pn_TimKiem_NSP.setLayout(pn_TimKiem_NSPLayout);
        pn_TimKiem_NSPLayout.setHorizontalGroup(
            pn_TimKiem_NSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_TimKiem_NSPLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(lbl_NhapTenMa_NSP)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_MaTen_TK_NSP, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbl_NhomSP_TK_NSP)
                .addGap(77, 77, 77)
                .addComponent(dc_NgayNhap_TK_NSP, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(btn_TimKiem_TK_NSP, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );
        pn_TimKiem_NSPLayout.setVerticalGroup(
            pn_TimKiem_NSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_TimKiem_NSPLayout.createSequentialGroup()
                .addGroup(pn_TimKiem_NSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pn_TimKiem_NSPLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(pn_TimKiem_NSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_NhapTenMa_NSP)
                            .addComponent(txt_MaTen_TK_NSP, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_NhomSP_TK_NSP)
                            .addComponent(btn_TimKiem_TK_NSP, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pn_TimKiem_NSPLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(dc_NgayNhap_TK_NSP, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(5, 5, 5))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pn_TenForm_NSP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pn_TimKiem_NSP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pn_TTSP_NSP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pn_ChucNang_NSP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(scp_DanhSachNSP_NSP))
                .addContainerGap(71, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(pn_TenForm_NSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pn_TimKiem_NSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pn_TTSP_NSP, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pn_ChucNang_NSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scp_DanhSachNSP_NSP, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tbl_DanhSachNSP_NSPFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tbl_DanhSachNSP_NSPFocusLost

    }//GEN-LAST:event_tbl_DanhSachNSP_NSPFocusLost

    private void tbl_DanhSachNSP_NSPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_DanhSachNSP_NSPMouseClicked
        try {
            int row = tbl_DanhSachNSP_NSP.getSelectedRow();
            //MessageDialogHelper.showConfirmDialog(null, ""+row, "Cảnh báo");
            if(row>=0)
            {
            String id = (String) tbl_DanhSachNSP_NSP.getValueAt(row, 0);
            NhomSanPhamDao dao = new NhomSanPhamDao();
            NhomSanPham nsp = dao.find(id);
            
            if(nsp!=null)
            {
                txt_MaNSP_NSP.setText(nsp.getMaNhomSP().replaceAll("\\s",""));
                txt_TenNSP_NSP.setText(nsp.getTenNhomSP());
                Date ns0 = new SimpleDateFormat("yyyy-MM-dd").parse(nsp.getNgayNhap());
                String ns1 = new SimpleDateFormat("MM-dd-yyyy").format(ns0);
                Date ns2 = new SimpleDateFormat("MM-dd-yyyy").parse(ns1);
                dc_NgayNhap_NSP.setDate(ns2);
               
            }}
                
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, e.getStackTrace(),"Lỗi",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_tbl_DanhSachNSP_NSPMouseClicked
    
    public String tuDongLayMa() {
		String maNSP = "";
		try {
			Connection con = ConnectDB.getInstance().getConnection();
			String sql = " DECLARE @ID VARCHAR(6)\r\n"
					+ " IF (SELECT COUNT(maNhomSP) FROM NhomSanPham) = 0\r\n"
					+ " SET @ID = '0'\r\n" 
                                        + " ELSE\r\n"
					+ " SELECT @ID = MAX(RIGHT(rtrim(maNhomSP), 3)) FROM NhomSanPham\r\n"
                                        + " SELECT @ID = CASE\r\n"
                                        + " WHEN @ID >= 0 and @ID < 9 THEN 'NSP00' + CONVERT(CHAR, CONVERT(INT, @ID) + 1)\r\n"      
                                        + " WHEN @ID >= 9 THEN 'NSPG0' + CONVERT(CHAR, CONVERT(INT, @ID) + 1)\r\n"
                                        + " END\r\n"
                                        + " select @ID" ;       		
                                
			Statement statement = con.createStatement();
			ResultSet rs = statement.executeQuery(sql);
			while (rs.next()) {
				String ID = rs.getString(1);
				maNSP = ID;
			}
		} catch (SQLException e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		return maNSP;
	}
    private void btn_ThemNSP_NSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ThemNSP_NSPActionPerformed
       txt_MaNSP_NSP.setText(tuDongLayMa());
        StringBuilder sb = new StringBuilder();
        //MessageDialogHelper.showMessageDialog(null, (String) cbx_MaTK_T.getSelectedItem(), "Thông báo");
        DataValidator.validateEmpty(txt_TenNSP_NSP, sb,"Tên nhà cung cấp không được để trống!");
        DataValidator.validateEmpty(dc_NgayNhap_NSP, sb, "Ngày sinh không được để trống và theo định dạng MM-dd-yyyy");
        
        
        if(sb.length()>0)
        {
            MessageDialogHelper.showErrorDialog(null, sb.toString(), "Lỗi");
            return;
        }

        try {
            NhomSanPham nsp = new NhomSanPham();
            nsp.setMaNhomSP(txt_MaNSP_NSP.getText());
            nsp.setTenNhomSP(txt_TenNSP_NSP.getText());
            
            nsp.setNgayNhap(((JTextField)dc_NgayNhap_NSP.getDateEditor().getUiComponent()).getText());//
            NhomSanPhamDao dao =new NhomSanPhamDao();
            if(dao.insert(nsp))
            {
                resetTable();
                MessageDialogHelper.showMessageDialog(null, "Tác giả thêm thành công", "Thông báo");
                resetThongTin();
                
            }
            else{
                MessageDialogHelper.showConfirmDialog(null, "Tác giả không lưu được do lỗi", "Cảnh báo");
                
            }

        } catch (Exception e) {
            e.printStackTrace();
            MessageDialogHelper.showErrorDialog( null, e.getMessage()
                , "Lỗi");
        }
    }//GEN-LAST:event_btn_ThemNSP_NSPActionPerformed
    private void resetTable() {
        tblModel.setRowCount(0);
        loadDataToTable();
    }
    private void btn_Xoa_NSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Xoa_NSPActionPerformed
         //StringBuilder sb = new StringBuilder();
        //Kiểm tra có chọn trong table
        String maNSP = "" ;
        try {
            int row = tbl_DanhSachNSP_NSP.getSelectedRow();

            if(row>=0)
            {
                String id = (String) tblModel.getValueAt(row , 0);
                maNSP = JOptionPane.showInputDialog("Nhập mã nhóm sản phẩm muốn xóa",id);
            }else{
                maNSP = JOptionPane.showInputDialog("Nhập mã nhóm sản phẩm muốn xóa");
            }
        } catch (Exception e) {
        }
        //Xóa nhân viên

        //JOptionPane.showMessageDialog(null, maNhanVien==null);
        if((maNSP==null)==false)
        {
            if(maNSP.equals("")==false)
            {if(MessageDialogHelper.showConfirmDialog(null, "Bạn có muốn xóa nhóm sản phẩm không?", "Hỏi")==JOptionPane.YES_OPTION)
                {}else{return;}
                try {

                    NhomSanPhamDao dao =new NhomSanPhamDao();

                    if(dao.delete(maNSP))
                    {

                        MessageDialogHelper.showMessageDialog(null, "Xóa nhóm sản phẩm thành công", "Thông báo");
                        resetTable();

                    }
                    else{
                        MessageDialogHelper.showConfirmDialog(null, "Xóa nhóm sản phẩm không được do lỗi", "Cảnh báo");
                    }

                } catch (Exception e) {
                    e.printStackTrace();
                    MessageDialogHelper.showErrorDialog( null, e.getMessage()
                        , "Lỗi");
                }
            }
        }
    }//GEN-LAST:event_btn_Xoa_NSPActionPerformed

    private void btn_CapNhap_NSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CapNhap_NSPActionPerformed
        StringBuilder sb = new StringBuilder();
        NhomSanPhamDao dao =new NhomSanPhamDao();
        
        DataValidator.validateEmptyMaNSP(txt_MaNSP_NSP, sb);                
        DataValidator.validateEmpty(txt_TenNSP_NSP, sb,"Tên nhà cung cấp không được để trống!");
        DataValidator.validateEmpty(dc_NgayNhap_NSP, sb, "Ngày sinh không được để trống và theo định dạng MM/dd/yyyy");
        
        
        if(sb.length()>0)
        {
            MessageDialogHelper.showErrorDialog(null, sb.toString(), "Lỗi");
            return;
        }
        try {
             NhomSanPham text = dao.find(txt_MaNSP_NSP.getText());
             if(text==null)
             {
                 MessageDialogHelper.showErrorDialog(null, "Mã nhóm sản phẩm không tồn tại", "Lỗi");
                 return ;}
         } catch (Exception ex) {
             
         }
        if(MessageDialogHelper.showConfirmDialog(null, "Bạn có muốn cập nhân nhóm sản phẩm không?", "Hỏi")==JOptionPane.YES_OPTION)
        {}else{return;}
        try {
            NhomSanPham nsp =new NhomSanPham();
            nsp.setMaNhomSP(txt_MaNSP_NSP.getText());
            nsp.setTenNhomSP(txt_TenNSP_NSP.getText());
            
            nsp.setNgayNhap(((JTextField)dc_NgayNhap_NSP.getDateEditor().getUiComponent()).getText());
            
            
            

            if(dao.update(nsp))
            {
                resetTable();
                MessageDialogHelper.showMessageDialog(null, "Cập nhập nhóm sản phẩm thành công", "Thông báo");
                resetThongTin();
            }
            else{
                MessageDialogHelper.showConfirmDialog(null, "Cập nhập nhóm sản phẩm không được do lỗi", "Cảnh báo");
                
            }

        } catch (Exception e) {
            e.printStackTrace();
            MessageDialogHelper.showErrorDialog( null, e.getMessage()
                , "Lỗi");
        }
    }//GEN-LAST:event_btn_CapNhap_NSPActionPerformed

    private void btn_CapNhapBang_NSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CapNhapBang_NSPActionPerformed
        resetTable();

    }//GEN-LAST:event_btn_CapNhapBang_NSPActionPerformed

    private void btn_XoaTT_NSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_XoaTT_NSPActionPerformed
        resetThongTin();
    }//GEN-LAST:event_btn_XoaTT_NSPActionPerformed
    private void resetThongTin() throws HeadlessException {
        resetTextFiled(txt_MaNSP_NSP);
        resetTextFiled(txt_TenNSP_NSP);
        resetTextFiled(dc_NgayNhap_NSP);
        
        
    }
    private void resetTextFiled(JDateChooser field) {
         field.setDate(null);
         field.setBackground(Color.white);//To change body of generated methods, choose Tools | Templates.
    }
     private void resetTextFiled(JTextField field) throws HeadlessException {
       field.setText("");
       field.setBackground(Color.white);
    }
    private void btn_TimKiem_TK_NSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_TimKiem_TK_NSPActionPerformed
        try {
            NhomSanPhamDao dao = new NhomSanPhamDao();
            String NSP = txt_MaTen_TK_NSP.getText();
            String maNSP = dao.findMaNhomSPByTen(NSP)==null?NSP:dao.findMaNhomSPByTen(NSP).getMaNhomSP();
            List<NhomSanPham> list = dao.findDK(maNSP,((JTextField)dc_NgayNhap_TK_NSP.getDateEditor().getUiComponent()).getText());
                   
            tblModel.setRowCount(0);
            for(NhomSanPham it : list)
            {
                
                
                tblModel.addRow(new Object[]
                { it.getMaNhomSP(),it.getTenNhomSP(),it.getNgayNhap()} );
                
                tblModel.fireTableDataChanged();
            }
        } catch (Exception e) {
            e.printStackTrace();
            MessageDialogHelper.showErrorDialog(null, e.getMessage(), "Lỗi");

        }
    }//GEN-LAST:event_btn_TimKiem_TK_NSPActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_CapNhapBang_NSP;
    private javax.swing.JButton btn_CapNhap_NSP;
    private javax.swing.JButton btn_ThemNSP_NSP;
    private javax.swing.JButton btn_TimKiem_TK_NSP;
    private javax.swing.JButton btn_XoaTT_NSP;
    private javax.swing.JButton btn_Xoa_NSP;
    private com.toedter.calendar.JDateChooser dc_NgayNhap_NSP;
    private com.toedter.calendar.JDateChooser dc_NgayNhap_TK_NSP;
    private javax.swing.JLabel lbl_MaNSP_NSP;
    private javax.swing.JLabel lbl_NgayNhap_NSP;
    private javax.swing.JLabel lbl_NhapTenMa_NSP;
    private javax.swing.JLabel lbl_NhomSP_TK_NSP;
    private javax.swing.JLabel lbl_TenForm_NSP;
    private javax.swing.JLabel lbl_TenNSP_NSP;
    private javax.swing.JPanel pn_ChucNang_NSP;
    private javax.swing.JPanel pn_TTSP_NSP;
    private javax.swing.JPanel pn_TenForm_NSP;
    private javax.swing.JPanel pn_TimKiem_NSP;
    private javax.swing.JScrollPane scp_DanhSachNSP_NSP;
    private javax.swing.JTable tbl_DanhSachNSP_NSP;
    private javax.swing.JTextField txt_MaNSP_NSP;
    private javax.swing.JTextField txt_MaTen_TK_NSP;
    private javax.swing.JTextField txt_TenNSP_NSP;
    // End of variables declaration//GEN-END:variables
}
